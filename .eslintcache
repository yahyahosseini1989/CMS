[{"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Pages\\Users\\AddUser.jsx":"1","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\index.js":"2","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\ActionButtons\\ActionButtons.jsx":"3","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\Dialogs\\DeleteUser.jsx":"4","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Pages\\Layout\\Layout.jsx":"5","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\Snackbar\\Snackbar.jsx":"6","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Pages\\Users\\Users.jsx":"7","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Services\\Service.Users.js":"8","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\UseStyle\\UseStyle.js":"9"},{"size":9394,"mtime":1608408869532,"results":"10","hashOfConfig":"11"},{"size":515,"mtime":1607595588661,"results":"12","hashOfConfig":"11"},{"size":839,"mtime":1608118808963,"results":"13","hashOfConfig":"11"},{"size":1704,"mtime":1608405592897,"results":"14","hashOfConfig":"11"},{"size":5014,"mtime":1608046976480,"results":"15","hashOfConfig":"11"},{"size":1293,"mtime":1608111449899,"results":"16","hashOfConfig":"11"},{"size":5503,"mtime":1608408483015,"results":"17","hashOfConfig":"11"},{"size":453,"mtime":1608408437146,"results":"18","hashOfConfig":"11"},{"size":928,"mtime":1608107967022,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1t1vcpy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Pages\\Users\\AddUser.jsx",["41","42","43","44"],"import { React, Fragment } from 'react';\r\nimport { FormControl, InputLabel, Input, FormHelperText, Button, Grid, Form } from '@material-ui/core';\r\nimport Layout from './../Layout/Layout';\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport ActionButtons from '../../Components/ActionButtons/ActionButtons';\r\n\r\n\r\nconst AddUser = () => {\r\n\r\n\r\n    // const validationForm = Yup.object({\r\n    //     first_name: Yup.string().required('Required'),\r\n    //     last_name: Yup.string().required('Required'),\r\n    //     email: Yup.string().required('Required'),\r\n    // })\r\n\r\n    const SubmitForm = async (value) => {\r\n        console.log(value)\r\n        // await _PersonUsers.create(value);\r\n        // props.history.push(\"/users/users\")\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            <ActionButtons aria_label={'add'} />\r\n            \r\n            <Formik\r\n                // initialValues={initialValueOfForm}\r\n                onSubmit={(e) => SubmitForm(e)}\r\n                // validationSchema={validationForm}\r\n            >\r\n                {({ handleSubmit, handleChange, handleBlur, errors, touched }) => (\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"first_name\">First Name</InputLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name={\"first_name\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"first_name\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your first name.\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"last_name\">Last Name</InputLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name={\"last_name\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"last_name\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your Last name.\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"phone_number\">Phone Number</InputLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name={\"phone_number\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"phone_number\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your Phone Number.\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                                <Input\r\n                                    type=\"email\"\r\n                                    name={\"email\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"email\"\r\n                                    id=\"phone_number\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your Email.\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"height\">Height</InputLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name={\"height\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"height\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your Height.\r\n                            </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"weight\">Weight</InputLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name={\"weight\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"weight\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your Weight.\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"color_of_body\">Color of Body</InputLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name={\"color_of_body\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"color_of_body\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your Color of Body.\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"color_of_hair\">Color of Hair</InputLabel>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name={\"color_of_hair\"}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    id=\"color_of_hair\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                />\r\n                                <FormHelperText\r\n                                    id=\"my-helper-text\"\r\n                                >\r\n                                    We'll never share your Color of Hair.\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button\r\n                                onClick={() => handleSubmit()}\r\n                                type={\"submit\"}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n            </Formik>\r\n        </Layout>\r\n    );\r\n}\r\nexport default AddUser;\r\n","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\index.js",[],["45","46"],"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\ActionButtons\\ActionButtons.jsx",["47","48","49"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ActionButtons = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label={props.aria_label}\r\n        onClick={{}}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\nexport default ActionButtons;","C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\Dialogs\\DeleteUser.jsx",[],"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Pages\\Layout\\Layout.jsx",[],"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Pages\\Users\\Users.jsx",["50"],"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Services\\Service.Users.js",[],"C:\\Users\\Yahya\\Desktop\\MyReactJS\\my-app\\src\\Components\\UseStyle\\UseStyle.js",[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":2,"column":72,"nodeType":"53","messageId":"54","endLine":2,"endColumn":76},{"ruleId":"51","severity":1,"message":"56","line":5,"column":13,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":99,"column":37,"nodeType":"59","endLine":99,"endColumn":54},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"51","severity":1,"message":"64","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"51","severity":1,"message":"65","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":20},{"ruleId":"51","severity":1,"message":"66","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":27,"column":8,"nodeType":"69","endLine":27,"endColumn":10,"suggestions":"70"},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Yup' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'EditIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'NavigationIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetUsers'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [GetUsers]",{"range":"76","text":"77"},[971,973],"[GetUsers]"]